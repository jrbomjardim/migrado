#!/usr/bin/env python3
import os
import sys
sys.path.insert(0, os.path.dirname(__file__))

from src.main import app, db
from src.models.user import User
from src.models.category import Category, Theme
from src.models.card import Card
from src.models.study import StudySession, CardReview, StudyGoal
from src.models.question_list import QuestionList, PresetQuestion
from werkzeug.security import generate_password_hash

def init_database():
    with app.app_context():
        # Criar todas as tabelas
        db.create_all()
        
        # Verificar se j√° existe usu√°rio demo
        demo_user = User.query.filter_by(username='demo').first()
        if not demo_user:
            # Criar usu√°rio demo
            demo_user = User(
                username='demo',
                email='demo@medcards.com',
                password_hash=generate_password_hash('demo123')
            )
            db.session.add(demo_user)
            db.session.commit()
            print("Usu√°rio demo criado com sucesso!")
        
        # Verificar se j√° existe usu√°rio admin
        admin_user = User.query.filter_by(username='admin').first()
        if not admin_user:
            # Criar usu√°rio admin
            admin_user = User(
                username='admin',
                email='admin@medcards.com',
                password_hash=generate_password_hash('admin123'),
                is_admin=True
            )
            db.session.add(admin_user)
            db.session.commit()
            print("Usu√°rio admin criado com sucesso!")
        else:
            admin_user = User.query.filter_by(username='admin').first()
            
            # Criar categorias de exemplo
            categories_data = [
                {'name': 'Anatomia', 'color': '#2E86AB', 'icon': 'ü´Ä'},
                {'name': 'Fisiologia', 'color': '#06D6A0', 'icon': '‚ö°'},
                {'name': 'Patologia', 'color': '#F18F01', 'icon': 'üî¨'},
                {'name': 'Farmacologia', 'color': '#C73E1D', 'icon': 'üíä'},
                {'name': 'Cl√≠nica M√©dica', 'color': '#8E44AD', 'icon': 'ü©∫'},
            ]
            
            for cat_data in categories_data:
                category = Category(
                    name=cat_data['name'],
                    color=cat_data['color'],
                    icon=cat_data['icon'],
                    user_id=demo_user.id
                )
                db.session.add(category)
            
            db.session.commit()
            print("Categorias de exemplo criadas!")
            
            # Criar alguns cards de exemplo
            anatomy_cat = Category.query.filter_by(name='Anatomia', user_id=demo_user.id).first()
            if anatomy_cat:
                cards_data = [
                    {
                        'question': 'Qual √© o maior osso do corpo humano?',
                        'answer': 'O f√™mur √© o maior osso do corpo humano, localizado na coxa.',
                        'difficulty': 'easy'
                    },
                    {
                        'question': 'Quantas c√¢maras tem o cora√ß√£o humano?',
                        'answer': 'O cora√ß√£o humano tem 4 c√¢maras: 2 √°trios (direito e esquerdo) e 2 ventr√≠culos (direito e esquerdo).',
                        'difficulty': 'medium'
                    },
                    {
                        'question': 'Qual √© a fun√ß√£o principal dos alv√©olos pulmonares?',
                        'answer': 'Os alv√©olos pulmonares s√£o respons√°veis pela troca gasosa entre o ar e o sangue, permitindo a entrada de oxig√™nio e a sa√≠da de di√≥xido de carbono.',
                        'difficulty': 'medium'
                    }
                ]
                
                for card_data in cards_data:
                    card = Card(
                        question=card_data['question'],
                        answer=card_data['answer'],
                        difficulty=card_data['difficulty'],
                        category_id=anatomy_cat.id,
                        user_id=demo_user.id
                    )
                    db.session.add(card)
                
                db.session.commit()
                print("Cards de exemplo criados!")
        
        # Criar lista de perguntas de exemplo se n√£o existir
        if admin_user:
            existing_list = QuestionList.query.filter_by(name='Traumatologia e Emerg√™ncias').first()
            if not existing_list:
                # Criar lista de perguntas de traumatologia
                question_list = QuestionList(
                    name='Traumatologia e Emerg√™ncias',
                    description='Lista de perguntas sobre traumatologia, emerg√™ncias m√©dicas e procedimentos de urg√™ncia',
                    created_by=admin_user.id
                )
                db.session.add(question_list)
                db.session.flush()  # Para obter o ID
                
                # Perguntas de exemplo baseadas no arquivo fornecido
                sample_questions = [
                    "Que es fractura",
                    "Tipos de fractura",
                    "¬øEn relaci√≥n a la traumatolog√≠a, cual tipo de trauma no es fractura?",
                    "Escala de Gustillo y Anderson (traumado)",
                    "En que consiste la revisi√≥n secundaria",
                    "¬øCu√°les son los auxiliares de la revisi√≥n secundaria",
                    "Los T prevenibles en el trauma",
                    "Los 3 H del paciente politraumatizado",
                    "Composici√≥n de Ringer, Ringer lactado y soluci√≥n fisiol√≥gica",
                    "Trauma t√≥rax tipos y cual conoce",
                    "Clasificaci√≥n de los traumas de t√≥rax",
                    "De los traumas de t√≥rax cu√°l es m√°s peligroso",
                    "A partir de cuantos ml de colecci√≥n se puede observar un derrame pleural en la radiograf√≠a",
                    "Neumot√≥rax simples",
                    "Neumot√≥rax a tensi√≥n",
                    "Clasificaci√≥n radiol√≥gica del neumot√≥rax",
                    "Neumot√≥rax abierto ‚Äì cl√≠nica y tratamiento",
                    "Hemot√≥rax clasificaci√≥n cl√≠nica y tratamiento",
                    "Cuadrantes abdominales y √≥rganos en cada uno",
                    "Semiolog√≠a abdominal - como se realiza la palpaci√≥n"
                ]
                
                for index, question_text in enumerate(sample_questions):
                    preset_question = PresetQuestion(
                        question_list_id=question_list.id,
                        question_text=question_text,
                        order_index=index + 1
                    )
                    db.session.add(preset_question)
                
                db.session.commit()
                print("Lista de perguntas de exemplo criada!")
        else:
            print("Usu√°rio demo j√° existe!")
        
        print("Banco de dados inicializado com sucesso!")

if __name__ == '__main__':
    init_database()

